<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd">

<suite name="TestNG_Tutorial">
	
	<listeners>
		<listener class-name="TestNG.Listeners"/>
	</listeners>
	
	<parameter name="suiteLevel" value="This is suite level parameter."/>
  <test name="Demo">
	<!-- Accesing a method from a class -->
	<parameter name="testLevel" value="This is test case level parameter."/>
    <classes>  
    	<class name="TestNG.Program1"/>  
    </classes> 
  </test>
  
  
  <test name="Exclude">
	<!-- Demo of exclude annotation" -->
    <classes>  
    	<class name="TestNG.Program2">
			<methods>
				<exclude name="Demo1"/>
			</methods>
    	</class>  
    </classes> 
  </test>
  
  
  <test name="Include">
	<!-- Demo of include annotation" -->
    <classes>  
    	<class name="TestNG.Program3">
			<methods>
				<include name="Demo2"/>
			</methods>
    	</class>  
    </classes> 
  </test>
  
  
  <test name="Exclude Include methods, using regexp 4">
	<!-- Demo of displaying method using regex expression using ".*" extention. This will only work if the method name having common name. But the methods having any priority annotations, like @Beforemethod or @BeforeTest or @BeforeSuite, will get executed. irrevant of exlcude or include annotations. Also the beforeMethod and AfterMethod, will get executed before and after each and every remaining methods-->
    <classes>  
    	<class name="TestNG.Program4">
			<methods>
				<exclude name="method.*"/>
			</methods>
    	</class>  
    </classes> 
  </test>
  
  
  <test name="Demo of BeforeTest and AfterTest, BeforeSuite and AfterSuite annotations">
	<!-- Demo of displaying method using @BeforeTest, @AfterTest annotations. These will only prioritize the methods of a Test, and not for all the tests. Like the method will run in priority only before the mrthods of test: Program 5. Scop is only till the Test-->
	
	<!-- Demo of displaying method using @BeforeSuite, @AfterSuite annotations. These will only prioritize the methods all the tests and methods in a suite. Like the method will run in priority before or after any other methods in the suite. Scope is overall suite-->
    <classes>  
		<class name="TestNG.Program1"/>
    	<class name="TestNG.Program5"/> 
    </classes> 
  </test>
  
  
  <test name="Demo of BeforeMethod and AfterMethod annotations">
	<!-- Demo of displaying method using @BeforeMethod, @AfterMethod annotations. These will only prioritize the methods of a Class, and not for all the tests or suite. Like the method will run in priority only before or after the methods of a class: Program 4. Scope is only in the class -->
    <classes>  
		<class name="TestNG.Program1"/>
    	<class name="TestNG.Program4"/> 
    </classes> 
  </test>
  
  
  <test name="Groups mechanism">
	<!-- This mechanism let us to creats group of methods, which are having same tags and executing them at once. -->
	<groups>
		<run>
			<include name="important"/>
		</run>
	</groups>
    <classes>  
		<class name="TestNG.Program1"/>
		<class name="TestNG.Program2"/>
		<class name="TestNG.Program3"/>
		<class name="TestNG.Program4"/>
    	<class name="TestNG.Program5"/> 
    </classes> 
  </test>
  
  
  <test name="dependsOnMethods, enabled, timeOut: helper annotation">
	<!-- This helps annotation to runs method after a particular method, irrespective of its alphabetical order.-->
    <classes>  
		<class name="TestNG.Program6"/> 
    </classes> 
    </test>


  <test name="Demo of DataProvider Annotation">
	<!-- This Test Case is a representation of Data Provider Annotation. It will fetch data from a daata provider and implement it the program-->
	<classes>
		<class name="TestNG.Program7"/>	
	</classes>
  </test>
</suite>

<!-- To check the output in the browser. Goto and expand 'test-output' file. now goto ''index.html' and double click on the file. It will redirect to the browser. Or  right click on the file-> select properties -> copy the entire location from the location section -> now paste it to the browser. -->

